#!/usr/bin/env bash

## Author  : Zim Muller
## Github  : @zim0369
## Reddit  : @zim0369

## kitty installer script
##

## ANSI Colors (FG & BG)
RED="$(printf '\033[31m')"  GREEN="$(printf '\033[32m')"  ORANGE="$(printf '\033[33m')"  BLUE="$(printf '\033[34m')"
MAGENTA="$(printf '\033[35m')"  CYAN="$(printf '\033[36m')"  WHITE="$(printf '\033[37m')" BLACK="$(printf '\033[30m')"
REDBG="$(printf '\033[41m')"  GREENBG="$(printf '\033[42m')"  ORANGEBG="$(printf '\033[43m')"  BLUEBG="$(printf '\033[44m')"
MAGENTABG="$(printf '\033[45m')"  CYANBG="$(printf '\033[46m')"  WHITEBG="$(printf '\033[47m')" BLACKBG="$(printf '\033[40m')"
DEFAULT_FG="$(printf '\033[39m')"  DEFAULT_BG="$(printf '\033[49m')"

## Directories
DIR="$(pwd)"
ROOT="/usr/local"
KITTY_DIR="$HOME/.config/kitty"

## Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    -r|--root)
      ROOT="$2"
      shift 2
      ;;
    -k|--kitty-dir)
      KITTY_DIR="$2"
      shift 2
      ;;
    *)
      echo "Invalid option: $1" >&2
      exit 1
      ;;
  esac
done

## Banner
banner () {
    clear
    printf '%s\n' "
    ${ORANGE}☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴
    ${CYAN}██▓▒­░⡷⠂${RED} 𝓟𝓻𝓮𝓽𝓽𝔂 𝓚𝓲𝓽𝓽𝔂 ${BLUE}🐈 ${CYAN}⠐⢾░▒▓██ 
    ${ORANGE}☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴☴
    "
}

## Script Termination
exit_on_signal_SIGINT () {
    { printf "%s\n" "    ${CYAN}[${RED}✗${CYAN}] ${BLUE}Script interrupted" 2>&1; reload_settings; reset_color; }
    exit 0
}

exit_on_signal_SIGTERM () {
    { printf "%s\n" "    ${CYAN}[${RED}*${CYAN}] ${BLUE}Script terminated" 2>&1; reload_settings; reset_color; }
    exit 0
}

trap exit_on_signal_SIGINT SIGINT
trap exit_on_signal_SIGTERM SIGTERM

## Reset terminal colors
reset_color() {
	tput sgr0   # reset attributes
	tput op     # reset color
  return
}

## Prerequisite
prerequisite() {
    dependencies=(kitty fzf git sed grep find wget)
    for dependency in "${dependencies[@]}"; do
        type -p "$dependency" &>/dev/null || {
			banner
            printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${RED}ERROR: Could not find ${MAGENTA}'${dependency}'${RED}, is it installed?" >&2;
            { reset_color; exit 1; }
        }
    done
}

## Check for previous installation
check_prev () {
	banner
	if [[ (-L $ROOT/bin/pkitty) || (-f $ROOT/bin/pkitty) ]]; then
		printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${MAGENTA}pretty-kitty ${GREEN}is already installed.";
		{ read -r -n 1 -p "    ${BLUE}[${RED}?${BLUE}] ${ORANGE}Do you wish to update? (y/n): ${GREEN}"; printf "\n"; }
		if [[ "$REPLY" =~ ^[y/Y]$ ]]; then
			install_pkitty
		else
		printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${MAGENTA}Updated Cancelled";
			{ reset_color; exit; }
		fi
	else
		{ printf "\n"; install_pkitty; }
	fi
}

## Install pretty-kitty
install_pkitty () {
	printf '%s\n' "    ${BLUE}[${RED}*${BLUE}] ${ORANGE}Installing pretty-kitty..."
	# Delete old files
	if [[ (-L $ROOT/bin/pkitty) && (-d $ROOT/share/pretty-kitty) ]]; then
		printf '%s\n' "    ${BLUE}[${RED}*${BLUE}] ${RED}Deleting files from previous installation...${BLUE}"
    printf '%s\n' "    "
    sudo rm -r $ROOT/bin/pkitty $ROOT/share/pretty-kitty $ROOT/share/fonts/pretty-kitty
	fi
   
	# pretty-kitty config dir
	if [[ ! -d $KITTY_DIR ]]; then
		mkdir -p "$KITTY_DIR"
	fi
     
	if ! [ -s "${KITTY_DIR}/kitty.conf" ]; then
		printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${RED}Cannot find kitty configuration: '${KITTY_DIR}/kitty.conf'${BLUE}"
		printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${RED}Creating one for you...${BLUE}"
    cp "$DIR/kitty.conf" "$KITTY_DIR"
    printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${RED}Please restart kitty after install...";
	fi
   
  if [ ! -f "${KITTY_DIR}/colors.conf" ]; then
      touch "${KITTY_DIR}/colors.conf"
  fi
     
	if ! grep --quiet 'colors\.conf' "${KITTY_DIR}/kitty.conf"; then
		printf '%s\n' "    ${BLUE}[${RED}*${BLUE}] ${RED}Adding pretty-kitty import to kitty config..."
		printf '%s\n' "include ${KITTY_DIR}/colors.conf" >> "${KITTY_DIR}/kitty.conf"
    printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${RED}Please restart kitty after install...";
	fi
	
	# Copying files
	printf '%s\n' "    ${BLUE}[${RED}*${BLUE}] ${ORANGE}Copying files to '$ROOT/share' directory...${BLUE}";
	{ printf '%s\n' "    "; sudo mkdir -p $ROOT/share/pretty-kitty; sudo mkdir -p $ROOT/share/fonts/pretty-kitty; }
	{ sudo cp -r "$DIR/colors" "$DIR/uninstall" "$DIR/pkitty" "$DIR/kitty.conf" $ROOT/share/pretty-kitty/; sudo cp -r "$DIR/fonts/"* $ROOT/share/fonts/pretty-kitty/; }
	sudo chmod +x $ROOT/share/pretty-kitty/pkitty $ROOT/share/pretty-kitty/uninstall;
  sudo fc-cache; sudo ln -s $ROOT/share/pretty-kitty/pkitty $ROOT/bin/pkitty;

	# Verify files 
	if [[ (-L $ROOT/bin/pkitty) && (-d $ROOT/share/pretty-kitty) ]]; then
		printf '%s\n' "    ${BLUE}[${RED}*${BLUE}] ${GREEN}Successfully Installed.";
		printf '%s\n' "    ${BLUE}[${RED}*${BLUE}] ${GREEN}Now You Can Run This Program By Just typing ${MAGENTA}pkitty${GREEN}.";
		{ reset_color; exit 0; }
	else
		{ printf '%s\n' "    ${BLUE}[${RED}!${BLUE}] ${RED}Error Occured."; reset_color; exit 1; }
	fi
}

## Main
main () {
	prerequisite
	check_prev
  banner
}

main
